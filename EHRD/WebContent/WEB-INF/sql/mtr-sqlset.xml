<?xml version="1.0" encoding="UTF-8"?>
<sqlset>
    <name>MTR</name>
    <version>2.0</version>
    <description>MTR 모듈을 위한 쿼리</description>
	
	    <sql-query name="GET_MTR_YEAR_LIST" description="멘토링승인 - 년도 리스트"><![CDATA[
		-- MTR : GET_MTR_YEAR_LIST
		SELECT DISTINCT(NVL(TO_CHAR(REQ_DTIME,'YYYY'), TO_CHAR(SYSDATE, 'YYYY'))) YYYY  , NVL(TO_CHAR(REQ_DTIME,'YYYY'), TO_CHAR(SYSDATE, 'YYYY'))||'년' TEXT
        FROM TB_BA_APPR_REQ
        WHERE COMPANYID = ?
        AND REQ_TYPE_CD IN (4,5)
		
    ]]></sql-query>
    
    <sql-query name="GET_MTR_RUN_LIST" description="멘토링 - 리스트"><![CDATA[
		-- MTR : GET_MTR_RUN_LIST
		SELECT * FROM(
            SELECT A.COMPANYID,
                   A.MTR_SEQ,
                   A.MTR_NM,
                   A.MTR_ST_DT,
                   A.MTR_ED_DT,
                   FUN_DATE_FORMAT(MTR_ST_DT, 1)||' ~ '|| FUN_DATE_FORMAT(MTR_ED_DT, 1) MTR_DATE,
                   A.USERID_MENTOR,
                   A.MTR_REQ_DIV_CD,
                   A.REQ_NUM,
                   A.REQ_STS_CD,
                   A.HRD_ADMIN_YN,
                   CASE WHEN  A.MTR_REQ_DIV_CD = 4 THEN (CASE WHEN A.REQ_STS_CD=1  THEN '생성요청' 
                                                         WHEN A.REQ_STS_CD=2  THEN '생성승인'
                                                         WHEN A.REQ_STS_CD=3  THEN '미승인'
                                                         WHEN A.REQ_STS_CD=4  THEN '진행중'
                                                         WHEN A.REQ_STS_CD=0  THEN '회수' 
                                                         ELSE '' 
                                                         END)
                   WHEN  A.MTR_REQ_DIV_CD = 5 THEN (CASE WHEN A.REQ_STS_CD=1  THEN '완료요청' 
                                                         WHEN A.REQ_STS_CD=3  THEN '미승인'
                                                         WHEN A.REQ_STS_CD=4  THEN '완료요청'
                                                         WHEN A.REQ_STS_CD=2  THEN '완료'
                                                         WHEN A.REQ_STS_CD=0  THEN '회수'
                                                         ELSE '' 
                                                         END) 
                   ELSE '' 
                   END APP_DIVISION,
                   A.RECOG_TIME_H,
                   A.RECOG_TIME_M,
                   A.USEFLAG,
                   A.DEL_YN,
                   B.MTR_MB_SEQ,
                   B.USERID_MENTEE,
                   (SELECT MAX(MTR_MB_SEQ) FROM TB_MTR_MB WHERE COMPANYID=A.COMPANYID AND MTR_SEQ=A.MTR_SEQ) MENTEE_SEQ,
                   (SELECT NAME FROM TB_BA_USER WHERE USERID=A.USERID_MENTOR) MENTOR_NM,
                   (SELECT WM_CONCAT( DECODE (TU.NAME,'',' ',DECODE(TU.NAME, NULL,  '',TU.NAME)))
                    FROM TB_MTR_MB TM ,TB_BA_USER TU
                    WHERE TM.MTR_SEQ = A.MTR_SEQ
                    AND TM.USERID_MENTEE = TU.USERID) MENTEE_NM,
                    CASE WHEN USERID_MENTOR = ? THEN 'MENTOR'
                         WHEN USERID_MENTEE = ? THEN 'MENTEE'
                         ELSE ''
                    END   DIVIDE,
                    CASE WHEN MTR_ED_DT > SYSDATE  THEN 'Y'
                         WHEN MTR_ED_DT < SYSDATE THEN 'N'
                         ELSE ''
                    END   MTR_TERM,
                    D.DVS_NAME,
                    D.DIVISIONID,
                    D.DVS_FULLNAME,
                    F.NAME,
                    F.GRADE_NUM,
                    F.GRADE_NM,
                    C.REQ_DTIME,
                    A.CREATER
            FROM TB_MTR A,
                 (SELECT MTR_SEQ,
                         MTR_MB_SEQ,
                         COMPANYID,
                         USERID_MENTEE,
                         USEFLAG 
                  FROM TB_MTR_MB 
                  WHERE USERID_MENTEE = ? 
                  AND USEFLAG='Y'
                  ) B,TB_BA_APPR_REQ C ,TB_BA_DIVISION D,TB_BA_USER F
            WHERE A.COMPANYID = B.COMPANYID(+)
            AND A.MTR_SEQ = B.MTR_SEQ(+)
            AND A.COMPANYID = ?
            AND A.USEFLAG ='Y'
            AND A.DEL_YN='N'
            AND A.COMPANYID = C.COMPANYID
            AND A.REQ_NUM = C.REQ_NUM
            AND C.REQ_USERID = F.USERID
            AND A.COMPANYID = D.COMPANYID
            AND F.DIVISIONID = D.DIVISIONID
            AND A.REQ_STS_CD <> 0
            --AND A.MTR_SEQ NOT IN (SELECT MTR_SEQ FROM TB_MTR WHERE MTR_REQ_DIV_CD = 4 AND (REQ_STS_CD = 0 OR REQ_STS_CD = 3) )  
        )
        WHERE USERID_MENTOR = ? OR USERID_MENTEE = ?
        ORDER BY MTR_SEQ DESC
    ]]></sql-query>
    
     <sql-query name="GET_MTR_RUN_APP_LIST" description="멘토링승인 - 리스트"><![CDATA[
     -- MTR : GET_MTR_RUN_APP_LIST
      SELECT SL.*, COUNT(*) OVER() TOTALITEMCOUNT FROM(
            SELECT A.COMPANYID,
                       A.MTR_SEQ,
                       A.MTR_NM,
                       A.MTR_ST_DT,
                       A.MTR_ED_DT,
                       FUN_DATE_FORMAT(MTR_ST_DT, 1)||' ~ '|| FUN_DATE_FORMAT(MTR_ED_DT, 1) MTR_DATE,
                       A.USERID_MENTOR,
                       A.MTR_REQ_DIV_CD,
                       CASE WHEN A.MTR_REQ_DIV_CD = 4 THEN '생성'
                            WHEN A.MTR_REQ_DIV_CD = 5 THEN '완료'
                            ELSE ''
                            END APP_DIVISION,
                       A.REQ_NUM,
                       F.REQ_STS_CD,
                       A.HRD_ADMIN_YN,
                       A.RECOG_TIME_H,
                       A.RECOG_TIME_M,
                       FUN_COMMON_CODE(A.COMPANYID, 'BA13', B.LAST_REQ_STS_CD) LAST_REQ_STS_NM,
                       FUN_COMMON_CODE(A.COMPANYID, 'BA13', F.REQ_STS_CD) MY_REQ_STS_NM,
                       A.USEFLAG,
                       A.DEL_YN,
                       (SELECT NAME FROM TB_BA_USER WHERE USERID=A.USERID_MENTOR) MENTOR_NM,
                       (SELECT WM_CONCAT( DECODE (TU.NAME,'',' ',DECODE(TU.NAME, NULL,  '',TU.NAME)))
                        FROM TB_MTR_MB TM ,TB_BA_USER TU
                        WHERE TM.MTR_SEQ = A.MTR_SEQ
                        AND TM.USERID_MENTEE = TU.USERID) MENTEE_NM,
                        (SELECT MAX(MTR_MB_SEQ) FROM TB_MTR_MB WHERE COMPANYID=A.COMPANYID AND MTR_SEQ=A.MTR_SEQ) MENTEE_SEQ,
                        B.REQ_DTIME,
                        B.LAST_REQ_LINE_SEQ,
                        C.DVS_NAME,
                        C.DIVISIONID,
                        C.DVS_FULLNAME,
                        D.NAME,
                        D.GRADE_NUM,
                        D.GRADE_NM,
                        F.APPR_USERID,
                        F.REQ_LINE_SEQ,
                        COUNT(*) OVER() TOTALITEMCOUNT,
                        NVL(TO_CHAR(B.REQ_DTIME,'YYYY'),TO_CHAR(SYSDATE, 'YYYY')) YYYY
                FROM TB_MTR A,TB_BA_APPR_REQ B ,TB_BA_DIVISION C,TB_BA_USER D ,TB_BA_APPR_REQ_LINE F
                WHERE  A.COMPANYID =?
                AND A.USEFLAG ='Y'
                AND A.DEL_YN='N'
                AND A.COMPANYID = B.COMPANYID
                AND A.REQ_NUM = B.REQ_NUM
                AND B.REQ_USERID = D.USERID
                AND A.COMPANYID = C.COMPANYID
                AND D.DIVISIONID = C.DIVISIONID
                AND A.COMPANYID = F.COMPANYID
                AND A.REQ_NUM = F.REQ_NUM
                AND B.LAST_REQ_STS_CD <>'0'
                AND F.APPR_USERID = ?
                AND (SELECT CASE WHEN F.REQ_LINE_SEQ = 1 THEN '2'
                                 ELSE REQ_STS_CD 
                                 END REQ_STS_CD
                     FROM TB_BA_APPR_REQ_LINE 
                     WHERE COMPANYID = B.COMPANYID 
                     AND REQ_NUM = B.REQ_NUM 
                     AND REQ_LINE_SEQ = CASE WHEN F.REQ_LINE_SEQ = 1 THEN F.REQ_LINE_SEQ ELSE  F.REQ_LINE_SEQ - 1 END 
                    ) NOT IN ( '1','3' )
     ) SL
     WHERE 1=1
   	]]><dynamic><![CDATA[ ${ GRID_WHERE_CLAUSE } ]]></dynamic><![CDATA[
	]]><dynamic><![CDATA[ ${ GRID_ORDERBY_CLAUSE } ]]></dynamic></sql-query>  
            
    <sql-query name="GET_MTR_RUN_ADMIN_LIST" description="멘토링 - 멘토링 관리 리스트"><![CDATA[
		-- MTR : GET_MTR_MENTEE_LIST
   		SELECT SL.*, COUNT(*) OVER() TOTALITEMCOUNT FROM(
			SELECT A.COMPANYID,
                   A.MTR_SEQ,
                   A.MTR_NM,
                   A.MTR_ST_DT,
                   A.MTR_ED_DT,
                   FUN_DATE_FORMAT(MTR_ST_DT, 1)||' ~ '|| FUN_DATE_FORMAT(MTR_ED_DT, 1) MTR_DATE,
                   A.USERID_MENTOR,
                   A.MTR_REQ_DIV_CD,
                   A.HRD_ADMIN_YN,
                   A.REQ_NUM,
                   A.REQ_STS_CD,
                   CASE WHEN A.MTR_REQ_DIV_CD = 4 THEN '생성'
                        WHEN A.MTR_REQ_DIV_CD = 5 THEN '완료'
                        ELSE ''
                        END APP_DIVISION,
                   CASE WHEN HRD_ADMIN_YN = 'Y' THEN '확정'
                   ELSE '처리전'
                   END  HRD_ADMIN_NM,     
                   A.RECOG_TIME_H,
                   A.RECOG_TIME_M,
                   FUN_COMMON_CODE(A.COMPANYID, 'BA13', B.LAST_REQ_STS_CD) LAST_REQ_STS_NM,
                   A.USEFLAG,
                   A.DEL_YN,
                   (SELECT NAME FROM TB_BA_USER WHERE USERID=A.USERID_MENTOR) MENTOR_NM,
                   (SELECT WM_CONCAT( DECODE (TU.NAME,'',' ',DECODE(TU.NAME, NULL,  '',TU.NAME)))
                    FROM TB_MTR_MB TM ,TB_BA_USER TU
                    WHERE TM.MTR_SEQ = A.MTR_SEQ
                    AND TM.USERID_MENTEE = TU.USERID) MENTEE_NM,
                    (SELECT MAX(MTR_MB_SEQ) FROM TB_MTR_MB WHERE COMPANYID=A.COMPANYID AND MTR_SEQ=A.MTR_SEQ) MENTEE_SEQ,
                    B.REQ_DTIME,
                    B.LAST_REQ_LINE_SEQ,
                    C.DVS_NAME,
                    C.DIVISIONID,
                    C.DVS_FULLNAME,
                    D.NAME,
                    D.GRADE_NUM,
                    D.GRADE_NM,
                    COUNT(*) OVER() TOTALITEMCOUNT,
                    NVL(TO_CHAR(B.REQ_DTIME,'YYYY'),TO_CHAR(SYSDATE, 'YYYY')) YYYY
            FROM TB_MTR A,TB_BA_APPR_REQ B ,TB_BA_DIVISION C,TB_BA_USER D 
            WHERE A.COMPANYID = B.COMPANYID
            AND A.REQ_NUM = B.REQ_NUM
            AND B.REQ_USERID = D.USERID
            AND A.COMPANYID = C.COMPANYID
            AND D.DIVISIONID = C.DIVISIONID
            AND A.MTR_REQ_DIV_CD = ?
            AND A.REQ_STS_CD = 2
            AND A.USEFLAG ='Y'
            AND A.DEL_YN='N'
              ]]><dynamic><![CDATA[ ${ DIVISION_STR } ]]></dynamic><![CDATA[
        )SL
        WHERE 1=1
   	]]><dynamic><![CDATA[ ${ GRID_WHERE_CLAUSE } ]]></dynamic><![CDATA[
	]]><dynamic><![CDATA[ ${ GRID_ORDERBY_CLAUSE } ]]></dynamic></sql-query>  
            
    <sql-query name="GET_MTR_MENTEE_LIST" description="멘토링 - 멘티 리스트"><![CDATA[
		-- MTR : GET_MTR_MENTEE_LIST
   
		SELECT 
		    A.MTR_SEQ,
		    A.MTR_MB_SEQ,
		    A.COMPANYID,
		    B.NAME,
		    B.USERID,
		    A.USERID_MENTEE,
		    A.USEFLAG,
		    (SELECT DVS_NAME FROM TB_BA_DIVISION WHERE COMPANYID = B.COMPANYID AND DIVISIONID = B.DIVISIONID) DVS_NAME
		FROM TB_MTR_MB A,TB_BA_USER B
		WHERE A.USERID_MENTEE = B.USERID
		AND A.COMPANYID = B.COMPANYID
		AND A.COMPANYID = ?
		AND A.MTR_SEQ = ?


    ]]></sql-query>
    
      <sql-query name="SELECT_SEQ_MTR_SEQ" description="멘토링 - SEQ 조회"><![CDATA[
        -- MTR : SELECT_SEQ_MTR_SEQ
    
		SELECT SEQ_MTR_SEQ.NEXTVAL FROM DUAL
    ]]></sql-query>
        <sql-query name="SELECT_SEQ_REQ_NUM" description="멘토링 - 승인요청번호 SEQ 조회"><![CDATA[
        -- MTR : SELECT_SEQ_REQ_NUM
    
		SELECT SEQ_REQ_NUM.NEXTVAL FROM DUAL
    ]]></sql-query>
            <sql-query name="SELECT_SEQ_MTR_MB_SEQ" description="멘토링 - 승인요청번호 SEQ 조회"><![CDATA[
        -- MTR : SELECT_SEQ_MTR_MB_SEQ
    
		SELECT SEQ_MTR_MB_SEQ.NEXTVAL FROM DUAL
    ]]></sql-query>
    
     <sql-query name="MERGE_TB_MTR" description="멘토링 - 저장"><![CDATA[
        -- MTR : MERGE_TB_MTR
		MERGE INTO TB_MTR A
		USING(
		    SELECT
		        ? COMPANYID, 
		        ? MTR_SEQ,
		        ? REQ_NUM,
		        ? USERID_MENTOR,
		        ? MTR_REQ_DIV_CD,
		        ? REQ_STS_CD,
		        ? MTR_NM,
		        ? MTR_ST_DT,
		        ? MTR_ED_DT,
		        'Y' USEFLAG,
		        'N' DEL_YN,
		        'N' HRD_ADMIN_YN,
		        SYSDATE CREATETIME,
		        ? CREATER
		    FROM DUAL
		) B
		ON ( A.COMPANYID = B.COMPANYID AND A.MTR_SEQ = B.MTR_SEQ AND A.REQ_NUM = B.REQ_NUM AND A.USERID_MENTOR = B.USERID_MENTOR )
		WHEN MATCHED THEN 
		    UPDATE SET
		        A.MTR_ST_DT = B.MTR_ST_DT,
		        A.MTR_ED_DT = B.MTR_ED_DT,
		        A.MODIFYTIME = B.CREATETIME,
		        A.MODIFIER = B.CREATER
		WHEN NOT MATCHED THEN 
		    INSERT(A.COMPANYID, A.MTR_SEQ, A.REQ_NUM, A.USERID_MENTOR, A.MTR_REQ_DIV_CD, A.REQ_STS_CD, A.MTR_NM,A.MTR_ST_DT,A.MTR_ED_DT,A.USEFLAG,A.CREATETIME,A.DEL_YN, A.CREATER,A.HRD_ADMIN_YN)
		    VALUES(B.COMPANYID, B.MTR_SEQ, B.REQ_NUM, B.USERID_MENTOR, B.MTR_REQ_DIV_CD, B.REQ_STS_CD, B.MTR_NM,B.MTR_ST_DT,B.MTR_ED_DT,B.USEFLAG,B.CREATETIME,B.DEL_YN, B.CREATER,B.HRD_ADMIN_YN)
    ]]></sql-query>
    
     <sql-query name="INSERT_TB_MTR_MENTEE" description="멘토링 -멘티 저장"><![CDATA[
        -- MTR : INSERT_TB_MTR_MENTEE 

		    INSERT INTO TB_MTR_MB (COMPANYID,MTR_SEQ,MTR_MB_SEQ, USERID_MENTEE, USEFLAG, CREATER,CREATETIME)
		    VALUES(?,?,?,?,'Y',?,SYSDATE)
    ]]></sql-query>
    
      <sql-query name="INSERT_TB_BA_APPR_REQ" description="승인요청 저장"><![CDATA[
        -- MTR : INSERT_TB_BA_APPR_REQ   
		INSERT INTO TB_BA_APPR_REQ(
		    COMPANYID, REQ_NUM, REQ_TYPE_CD, REQ_USERID, REQ_DTIME, 
		    LAST_REQ_STS_CD, LAST_REQ_LINE_SEQ, USEFLAG, CREATETIME,  CREATER 
		)
		VALUES(
		    ?, ?, ?, ?, SYSDATE,
		    '1', ?, 'Y', SYSDATE, ?
		)
    ]]></sql-query>
    
    <sql-query name="INSERT_TB_BA_APPR_REQ_LINE" description="승인요청라인 저장"><![CDATA[
        -- MTR : INSERT_TB_BA_APPR_REQ_LINE
    
			INSERT INTO TB_BA_APPR_REQ_LINE(
			    COMPANYID, REQ_NUM, REQ_LINE_SEQ, APPR_USERID, APPR_DIV_CD, 
			    REQ_STS_CD, USEFLAG, CREATETIME, 
			    CREATER
			)
			VALUES(
			    ?, ?, ?, ?, ?,
			    ?, 'Y', SYSDATE, ?
			)
    ]]></sql-query>
     <sql-query name="UPDATE_TB_MTR_DATE" description="멘토링  - 날짜수정"><![CDATA[
        -- MTR : UPDATE_TB_MTR
    	UPDATE TB_MTR
    	SET MTR_ST_DT =? , MTR_ED_DT = ?
    	WHERE COMPANYID = ? 
    	AND MTR_SEQ = ?
    	
			
    ]]></sql-query>
    
      <sql-query name="UPDATE_COMP_TB_MTR" description="멘토링 - 완료 요청 "><![CDATA[
        -- MTR : UPDATE_COMP_TB_MTR
    	UPDATE TB_MTR
    	SET REQ_NUM = ? ,MTR_REQ_DIV_CD =? , REQ_STS_CD = ?
    	WHERE COMPANYID = ? 
    	AND MTR_SEQ = ?
    	
			
    ]]></sql-query>
    
    <sql-query name="CANCEL_MTR_APPR_REQ" description="멘토링 - 승인요청 취소처리"><![CDATA[
        -- MTR : CANCEL_MTR_APPR_REQ
    
		UPDATE TB_MTR
		SET REQ_STS_CD = 0
		WHERE COMPANYID = ? AND REQ_NUM = ?
    ]]></sql-query>
    
    <sql-query name="UPDATE_TB_APPR_REQ_LINE" description="멘토링승인 - 승인 결재"><![CDATA[
        -- MTR : UPDATE_TB_APPR_REQ_LINE
    
		UPDATE TB_BA_APPR_REQ_LINE
		SET REQ_STS_CD='2',
		    REQ_STS_DTIME = SYSDATE
		WHERE COMPANYID= ?
		AND REQ_NUM=?
		AND REQ_LINE_SEQ=?
    ]]></sql-query>
    
    <sql-query name="UPDATE_TB_MTR" description="멘토링승인 - 최종 승인 결재"><![CDATA[
        -- MTR : UPDATE_TB_MTR
    
		UPDATE TB_MTR
		SET REQ_STS_CD='2'
		WHERE COMPANYID= ?
		AND MTR_SEQ=?
    ]]></sql-query>
    
    <sql-query name="UPDATE_TB_BA_APPR_REQ" description="멘토링승인 - 최종 승인 결재"><![CDATA[
        -- MTR : UPDATE_TB_BA_APPR_REQ
    
		UPDATE TB_BA_APPR_REQ
		SET LAST_REQ_STS_CD='2',
		    LAST_REQ_STS_DTIME = SYSDATE
		WHERE COMPANYID= ?
		AND REQ_NUM=?
    ]]></sql-query>
    

    
     <sql-query name="UPDATE_TB_NOT_APPR_REQ_LINE" description="멘토링 결재라인 미승인"><![CDATA[
        -- MTR : UPDATE_TB_APPR_REQ_LINE
    
		UPDATE TB_BA_APPR_REQ_LINE
		SET REQ_STS_CD='3'
		WHERE COMPANYID= ?
		AND REQ_NUM=?
		AND REQ_LINE_SEQ=?
    ]]></sql-query>
    
    <sql-query name="UPDATE_NOT_TB_MTR" description="멘토링 미승인 결재"><![CDATA[
        -- MTR : UPDATE_TB_MTR
    
		UPDATE TB_MTR
		SET REQ_STS_CD='3'
		WHERE COMPANYID= ?
		AND MTR_SEQ=?
    ]]></sql-query>
    
    <sql-query name="UPDATE_TB_BA_NOT_APPR_REQ" description="멘토링 최종미승인 결재"><![CDATA[
        -- MTR : UPDATE_TB_BA_APPR_REQ
    
		UPDATE TB_BA_APPR_REQ
		SET LAST_REQ_LINE_SEQ='3'
		WHERE COMPANYID= ?
		AND REQ_NUM=?
    ]]></sql-query>
       <sql-query name="SELECT_EMPOLYEE_LIST" description="임직원 목록 조회" >
        <![CDATA[
     	SELECT SL.*, COUNT(*) OVER() TOTALITEMCOUNT FROM(
	     	SELECT 
	               A.USERID,
	               A.ID,
	               A.NAME,
	               A.JOB,
	               A.LEADERSHIP,
	               A.DIVISIONID,
	               A.GRADE_NUM,
	               A.GRADE_NM,
	               A.EMPNO,
	               B.DVS_NAME,
	               B.DVS_FULLNAME, 
	               A.USEFLAG,
	               A.DEL_YN,
                   '' CHECKFLAG,
                   BC.CD_VALUE1 GRADE_DIV_NM
	        FROM TB_BA_USER A,TB_BA_DIVISION B, TB_BA_COMMONCODE BC
	        WHERE A.COMPANYID = B.COMPANYID
	        AND A.DIVISIONID = B.DIVISIONID
            AND A.COMPANYID = BC.COMPANYID(+) AND A.GRADE_NUM = BC.COMMONCODE(+) AND BC.STANDARDCODE(+) = 'BA15'
	        AND A.COMPANYID = ?
	        AND A.DEL_YN = 'N'
	        AND A.USEFLAG = 'Y'
	        AND A.EMP_STS_CD ='10'
	        ]]><dynamic><![CDATA[ ${ DIVISION_STR } ]]></dynamic>
	     <![CDATA[)SL WHERE 1=1]]>
     <dynamic><![CDATA[ ${ GRID_WHERE_CLAUSE } ]]></dynamic><![CDATA[]]>
     <dynamic><![CDATA[ ${ GRID_ORDERBY_CLAUSE } ]]></dynamic></sql-query>  
     
     <sql-query name="SELECT_GRADE_NM_LIST" description="직급 목록 조회" >
        <![CDATA[
        SELECT A.*,COUNT(*) OVER() TOTALITEMCOUNT 
    	FROM(
	     	SELECT COMMONCODE,CMM_CODENAME 
		    FROM TB_BA_COMMONCODE 
		    WHERE STANDARDCODE = 'BA15'
		    AND COMPANYID = ?
		    ]]>
		    <dynamic><![CDATA[ ${ GRID_WHERE_CLAUSE } ]]></dynamic><![CDATA[]]>
	     	<dynamic><![CDATA[ ${ GRID_ORDERBY_CLAUSE } ]]></dynamic>
	     	<![CDATA[) A]]>
	    </sql-query>   

    
    <sql-query name="UPDATE_TB_MTR_LAST_APPR_Y" description="멘토링관리 - 최종 승인 "><![CDATA[
        -- MTR : UPDATE_TB_MTR_LAST_APPR_Y
    
		UPDATE TB_MTR
		SET HRD_ADMIN_YN=?,
	    RECOG_TIME_H = CASE WHEN MONTHS_BETWEEN(?,?) < 3 THEN '15'
	                     WHEN MONTHS_BETWEEN(?,?) > 3 THEN '30'
	                     ELSE ''
	                    END,
	    RECOG_TIME_M = ?
		WHERE COMPANYID= ?
		AND MTR_SEQ=?
        
    ]]></sql-query>
    
     <sql-query name="UPDATE_TB_MTR_LAST_APPR_N" description="멘토링관리 - 최종 승인 "><![CDATA[
        -- MTR : UPDATE_TB_MTR_LAST_APPR_N
    
		UPDATE TB_MTR
		SET HRD_ADMIN_YN=?,
	    RECOG_TIME_H = ?,
	    RECOG_TIME_M = ?
		WHERE COMPANYID= ?
		AND MTR_SEQ=?
        
    ]]></sql-query>
    
    <sql-query name="DELETE_TB_MTR_DATE" description="멘토링  승인- 멘토링 삭제"><![CDATA[
        -- MTR : DELETE_TB_MTR_DATE
    	UPDATE TB_MTR
    	SET DEL_YN ='Y' , USEFLAG = 'N'
    	WHERE COMPANYID = ? 
    	AND MTR_SEQ = ?
    	
			
    ]]></sql-query>
 
</sqlset>